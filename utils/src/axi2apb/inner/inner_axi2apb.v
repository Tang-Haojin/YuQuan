//------------------------------------------------------------------
//-- File generated by RobustVerilog parser
//-- RobustVerilog version 1.2 (limited free version)
//-- Invoked Sun Aug 08 17:50:13 2021
//-- Source file: axi2apb.v
//-- Parent file: None
//-- Run directory: C:/Users/tangh/OneDrive/桌面/RobustVerilog_free1.2_win/robust_axi2apb/trunk/run/
//-- Target directory: out/
//-- Command flags: ../src/base/axi2apb.v -od out -I ../src/gen -list list.txt -listpath -header -gui 
//-- www.provartec.com/edatools ... info@provartec.com
//------------------------------------------------------------------





module inner_axi2apb (ACLK,ARESETn,AWID,AWADDR,AWLEN,AWSIZE,AWVALID,AWREADY,WDATA,WSTRB,WLAST,WVALID,WREADY,BID,BRESP,BVALID,BREADY,ARID,ARADDR,ARLEN,ARSIZE,ARVALID,ARREADY,RID,RDATA,RRESP,RLAST,RVALID,RREADY,pclk,presetn,psel,penable,pwrite,paddr,pwdata,pwstrb,prdata,pslverr,pready);

   input              ACLK;
   input              ARESETn;

   input [3:0]        AWID;
   input [31:0]       AWADDR;
   input [3:0]        AWLEN;
   input [1:0]        AWSIZE;
   input              AWVALID;
   output             AWREADY;
   input [31:0]       WDATA;
   input [3:0]        WSTRB;
   input              WLAST;
   input              WVALID;
   output             WREADY;
   output [3:0]       BID;
   output [1:0]       BRESP;
   output             BVALID;
   input              BREADY;
   input [3:0]        ARID;
   input [31:0]       ARADDR;
   input [3:0]        ARLEN;
   input [1:0]        ARSIZE;
   input              ARVALID;
   output             ARREADY;
   output [3:0]       RID;
   output [31:0]      RDATA;
   output [1:0]       RRESP;
   output             RLAST;
   output             RVALID;
   input              RREADY;
   
   //apb slaves
   output             pclk;
   output             presetn;
   output             psel;
   output             penable;
   output             pwrite;
   output [31:0]      paddr;
   output [31:0]      pwdata;
   output [3:0]       pwstrb;
   input [31:0]       prdata;
   input              pslverr;
   input              pready;



   wire                   pclk;
   wire                   presetn;
   wire                   psel;
   wire                   penable;
   wire                   pwrite;
   wire [31:0]            paddr;
   wire [31:0]            pwdata;
   wire [3:0]             pwstrb;
   wire [31:0]            prdata;
   wire                   pslverr;
   wire                   pready;
   
   //outputs of cmd
   wire                   cmd_empty;
   wire                   cmd_read;
   wire [4-1:0]           cmd_id;
   wire [32-1:0]          cmd_addr;
   wire                   cmd_err;
   
   //outputs of rd / wr
   wire                   finish_wr;
   wire                   finish_rd;
   
   assign                 pclk    = ACLK;
   assign                 presetn = ARESETn;
   
   assign                 paddr   = cmd_addr;
   assign                 pwstrb  = WSTRB;
   assign                 pwdata  = WDATA;

   
     axi2apb_cmd axi2apb_cmd(
                       .clk(ACLK),
                       .reset(!ARESETn),
                       .AWID(AWID),
                       .AWADDR(AWADDR),
                       .AWLEN(AWLEN),
                       .AWSIZE(AWSIZE),
                       .AWVALID(AWVALID),
                       .AWREADY(AWREADY),
                       .ARID(ARID),
                       .ARADDR(ARADDR),
                       .ARLEN(ARLEN),
                       .ARSIZE(ARSIZE),
                       .ARVALID(ARVALID),
                       .ARREADY(ARREADY),
                       .finish_wr(finish_wr),
                       .finish_rd(finish_rd),
                       .cmd_empty(cmd_empty),
                       .cmd_read(cmd_read),
                       .cmd_id(cmd_id),
                       .cmd_addr(cmd_addr),
                       .cmd_err(cmd_err)
                                           );

   
     axi2apb_rd axi2apb_rd(
                     .clk(ACLK),
                     .reset(!ARESETn),
                     .psel(psel),
                     .penable(penable),
                     .pwrite(pwrite),
                     .paddr(paddr),
                     .pwdata(pwdata),
                     .prdata(prdata),
                     .pslverr(pslverr),
                     .pready(pready),
                     .cmd_err(cmd_err),
                     .cmd_id(cmd_id),
                     .finish_rd(finish_rd),
                     .RID(RID),
                     .RDATA(RDATA),
                     .RRESP(RRESP),
                     .RLAST(RLAST),
                     .RVALID(RVALID),
                     .RREADY(RREADY)
                     );
   
     axi2apb_wr axi2apb_wr(
                     .clk(ACLK),
                     .reset(!ARESETn),
                     .psel(psel),
                     .penable(penable),
                     .pwrite(pwrite),
                     .paddr(paddr),
                     .pwdata(pwdata),
                     .prdata(prdata),
                     .pslverr(pslverr),
                     .pready(pready),
                     .cmd_err(cmd_err),
                     .cmd_id(cmd_id),
                     .finish_wr(finish_wr),
                     .WDATA(WDATA),
                     .WSTRB(WSTRB),
                     .WLAST(WLAST),
                     .WVALID(WVALID),
                     .WREADY(WREADY),
                     .BID(BID),
                     .BRESP(BRESP),
                     .BVALID(BVALID),
                     .BREADY(BREADY)
                     );
      

   
     axi2apb_ctrl axi2apb_ctrl(
                         .clk(ACLK),
                         .reset(!ARESETn),
                         .finish_wr(finish_wr),            
                         .finish_rd(finish_rd),
                         .cmd_empty(cmd_empty),
                         .cmd_read(cmd_read),
                         .WVALID(WVALID),
                         .psel(psel),
                         .penable(penable),
                         .pwrite(pwrite),
                         .pready(pready)
                         );

   

endmodule




